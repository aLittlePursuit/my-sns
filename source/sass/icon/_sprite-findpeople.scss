// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$icons-alipay-name: 'icons-alipay';
$icons-alipay-x: 228px;
$icons-alipay-y: 50px;
$icons-alipay-offset-x: -228px;
$icons-alipay-offset-y: -50px;
$icons-alipay-width: 158px;
$icons-alipay-height: 48px;
$icons-alipay-total-width: 428px;
$icons-alipay-total-height: 292px;
$icons-alipay-image: '../../images/findpeople/sprite-findpeople.png';
$icons-alipay: (228px, 50px, -228px, -50px, 158px, 48px, 428px, 292px, '../../images/findpeople/sprite-findpeople.png', 'icons-alipay', );
$icons-logo-name: 'icons-logo';
$icons-logo-x: 228px;
$icons-logo-y: 0px;
$icons-logo-offset-x: -228px;
$icons-logo-offset-y: 0px;
$icons-logo-width: 200px;
$icons-logo-height: 50px;
$icons-logo-total-width: 428px;
$icons-logo-total-height: 292px;
$icons-logo-image: '../../images/findpeople/sprite-findpeople.png';
$icons-logo: (228px, 0px, -228px, 0px, 200px, 50px, 428px, 292px, '../../images/findpeople/sprite-findpeople.png', 'icons-logo', );
$icons-phone-bg-name: 'icons-phone-bg';
$icons-phone-bg-x: 0px;
$icons-phone-bg-y: 0px;
$icons-phone-bg-offset-x: 0px;
$icons-phone-bg-offset-y: 0px;
$icons-phone-bg-width: 228px;
$icons-phone-bg-height: 292px;
$icons-phone-bg-total-width: 428px;
$icons-phone-bg-total-height: 292px;
$icons-phone-bg-image: '../../images/findpeople/sprite-findpeople.png';
$icons-phone-bg: (0px, 0px, 0px, 0px, 228px, 292px, 428px, 292px, '../../images/findpeople/sprite-findpeople.png', 'icons-phone-bg', );
$icons-wechat-green-name: 'icons-wechat-green';
$icons-wechat-green-x: 386px;
$icons-wechat-green-y: 50px;
$icons-wechat-green-offset-x: -386px;
$icons-wechat-green-offset-y: -50px;
$icons-wechat-green-width: 30px;
$icons-wechat-green-height: 30px;
$icons-wechat-green-total-width: 428px;
$icons-wechat-green-total-height: 292px;
$icons-wechat-green-image: '../../images/findpeople/sprite-findpeople.png';
$icons-wechat-green: (386px, 50px, -386px, -50px, 30px, 30px, 428px, 292px, '../../images/findpeople/sprite-findpeople.png', 'icons-wechat-green', );
$icons-wechat-name: 'icons-wechat';
$icons-wechat-x: 228px;
$icons-wechat-y: 98px;
$icons-wechat-offset-x: -228px;
$icons-wechat-offset-y: -98px;
$icons-wechat-width: 158px;
$icons-wechat-height: 48px;
$icons-wechat-total-width: 428px;
$icons-wechat-total-height: 292px;
$icons-wechat-image: '../../images/findpeople/sprite-findpeople.png';
$icons-wechat: (228px, 98px, -228px, -98px, 158px, 48px, 428px, 292px, '../../images/findpeople/sprite-findpeople.png', 'icons-wechat', );
$spritesheet-width: 428px;
$spritesheet-height: 292px;
$spritesheet-image: '../../images/findpeople/sprite-findpeople.png';
$spritesheet-sprites: ($icons-alipay, $icons-logo, $icons-phone-bg, $icons-wechat-green, $icons-wechat, );
$spritesheet: (428px, 292px, '../../images/findpeople/sprite-findpeople.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
